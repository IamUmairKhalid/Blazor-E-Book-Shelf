@page "/Admin/BooksLogs"
@using Microsoft.EntityFrameworkCore
@layout AdminLayout
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Admin")]

<PageTitle>Logs</PageTitle>

<!-- Table -->

<div class="row  justify-content-center ">

    <div class="col-md-10 justify-content-center">
        <h2>
            Logs Count (@Count)
        </h2>
        <table border="1" class="table mt-3 table-hover ">
            <thead class="custom-header">
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">User Name</th>
                    <th scope="col">Book Name</th>
                    <th scope="col">Status</th>
                    <th scope="col">Last Read</th>
                    <th scope="col">Progress</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Logs)
                {
                    <tr style="cursor:pointer" @onclick="() => OnShowDetailClick(item.Id)">
                        <td>@item.Id</td>
                        <td>@item.User.UserName</td>
                        <td>
                            <span class="short-text">@(item.Book.Title.Length > 10 ? item.Book.Title.Substring(0, 10) + "..." : item.Book.Title)</span>
                        </td>
                        <td>@item.Status</td>
                        <td>@item.UpdatedAt</td>
                        <td>@item.ProgressPercentage%</td>
                    </tr>
                }
            </tbody>
        </table>

    </div>
</div>


<!-- View Message -->

<Modal @ref="viewmodal" Title="Log Detail" UseStaticBackdrop="true" CloseOnEscape="false" Size="ModalSize.Large">
    <BodyTemplate>
        <dl class="row justify-content-center">
            <dt class="col-sm-2">ID: </dt>
            <dd class="col-sm-10"> @details.Id</dd>

            <dt class="col-sm-2">User Id: </dt>
            <dd class="col-sm-10"> @details.User.Id</dd>

            <dt class="col-sm-2">Name: </dt>
            <dd class="col-sm-10"> @details.User.UserName</dd>

            <dt class="col-sm-2">Book Id: </dt>
            <dd class="col-sm-10"> @details.Book.Id</dd>

            <dt class="col-sm-2">Book Title: </dt>
            <dd class="col-sm-10"> @details.Book.Title</dd>

            <dt class="col-sm-2">Status: </dt>
            <dd class="col-sm-10"> @details.Status</dd>

            <dt class="col-sm-2">Rating: </dt>
            <dd class="col-sm-10">
                <div class="text-yellow-500" style="color: gold;">
                    @for (int i = 0; i < (int)details.Rating; i++)
                    {
                        <i class="fas fa-star"></i>
                    }

                    @if (details.Rating - (int)details.Rating >= 0.25 && details.Rating - (int)details.Rating < 0.75)
                    {
                        <i class="fas fa-star-half-alt"></i>
                    }

                    @for (int i = 0; i < (5 - (int)details.Rating - ((details.Rating - (int)details.Rating >= 0.25 && details.Rating - (int)details.Rating < 0.75) ? 1 : 0)); i++)
                    {
                        <i class="far fa-star"></i>
                    }
                </div>
            </dd>

            <dt class="col-sm-2"> Last Activity: </dt>
            <dd class="col-sm-10"> @details.UpdatedAt</dd>

            <dt class="col-sm-2">Progress: </dt>
            <dd class="col-sm-10"> @details.ProgressPercentage%</dd>
        </dl>
    </BodyTemplate>
    <FooterTemplate>
        <a @onclick="OnHideDetailsClick" class="btn btn-secondary " style="width: 47px; height: 40px">
            <i class="bi bi-x-lg fs-5"></i>
        </a>
    </FooterTemplate>
</Modal>



@code {

    protected IEnumerable<Model.BooksLogs> Logs { get; set; }
    private BooksLogs details { get; set; }
    private int Count => Logs?.Count() ?? 0;

    protected override void OnInitialized()
    {

        Logs = Db.BooksLogs.Include(u=>u.User).Include(u=> u.Book).OrderByDescending(u=>u.UpdatedAt).ToList();

    }

    <!-- View Record Modal-->
    private Modal viewmodal = default!;

    private async Task OnShowDetailClick(int id)
    {
        details = Db.BooksLogs.FirstOrDefault(c => c.Id == id);
        await viewmodal.ShowAsync();
    }

    private async Task OnHideDetailsClick()
    {
        await viewmodal.HideAsync();
    }
}